#!/usr/bin/env python3
# pixel data generated by ImageMagick:
# $ for f in shredded/*; do \
#     convert $f -threshold 50% "pixels/$(basename $f).txt"; \
#   done

import itertools
import re
import math


space = r'000000000000000000000000000'
vtc = r'000111111101010101111111000'
lpme = r'00011111110.....01111111000'
lpms = r'00010000010.....01000001000'
lpmd = r'00010111010.....01011101000'
lpmm = r'00000000000.....00000000000'
rpme = r'00011111110................'
rpms = r'00010000010................'
rpmd = r'00010111010................'
rpmm = r'00000000000................'
hts = r'.........0.................'
htm = r'.........1.................'

slices = {}
for i in range(27):
    with open(f'pixels/{i}.png.txt', 'r') as f:
        pattern = ''
        for line in f:
            if line.startswith('5'):
                coords, color = line.split(': ')
                x, y = coords.split(',')
                if (int(y) % 11) == 5:
                    pattern += '0' if color.endswith('white\n') else '1'
        slices[i] = pattern

data = {k: v for k, v in slices.items() if '1' in v}

spaces = {k: v for k, v in slices.items() if re.match(space, v)}
vtcs = {k: v for k, v in slices.items() if re.match(vtc, v)}
lpmes = {k: v for k, v in slices.items() if re.match(lpme, v)}
lpmss = {k: v for k, v in slices.items() if re.match(lpms, v)}
lpmds = {k: v for k, v in slices.items() if re.match(lpmd, v)}
lpmms = {k: v for k, v in slices.items() if re.match(lpmm, v)}
rpmes = {k: v for k, v in slices.items() if re.match(rpme, v)}
rpmss = {k: v for k, v in slices.items() if re.match(rpms, v)}
rpmds = {k: v for k, v in slices.items() if re.match(rpmd, v)}
rpmms = {k: v for k, v in slices.items() if re.match(rpmm, v)}
htss = {k: v for k, v in slices.items() if re.match(hts, v)}
htms = {k: v for k, v in slices.items() if re.match(htm, v)}

patterns = [
    lpmes,
    lpmss,
    lpmds,
    lpmds,
    lpmds,
    lpmss,
    vtcs,
    lpmms,
    htms,
    htss,
    htms,
    htss,
    htms,
    rpmms,
    rpmes,
    rpmss,
    rpmds,
    rpmds,
    rpmds,
    rpmss,
    rpmes,
]

solutions = [[k for k in patterns[0].keys()]]
for i, p in enumerate(patterns[1:]):
    nextsolutions = []
    for s in solutions:
        for n in [x for x in p.keys() if x not in s]:
            toappend = s.copy().append(n)
            print(toappend)
            nextsolutions.append(s.copy().append(n))
    solutions = nextsolutions

for i, s in enumerate(solutions):
    args = ' '.join([f'shredded/{j}.jpg' for j in s])
    print(f'convert {args} +append results/{i}r.jpg')
